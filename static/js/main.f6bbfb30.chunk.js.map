{"version":3,"sources":["Navbar.js","blogLists.js","useFetch.js","Home.js","Create.js","BlogDetails.js","App.js","index.js"],"names":["Navbar","className","to","style","color","backgroundColor","borderRadius","BlogList","blogs","title","deleteBlog","map","blog","id","author","onClick","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","setTimeout","fetch","signal","then","resp","ok","Error","json","catch","err","name","console","log","message","abort","Home","method","window","location","reload","Create","setTitle","body","setBody","setAuthor","history","useHistory","onSubmit","e","preventDefault","headers","JSON","stringify","push","type","required","value","onChange","target","disabled","BlogDetails","useParams","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6bbfb30.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\n\nconst Navbar = () => {\n    return (  \n    <nav className =\"navbar\">\n        <h1> Blog</h1>\n        <div className=\"links\"></div>\n        <div className=\"links\">\n            <Link to=\"/ReactFirstBlogApp/\">Home</Link>\n            <Link to=\"/create\" style={\n            {\n                color: \"white\",\n                backgroundColor: '#f1356d',\n                borderRadius: '8px'\n            } } >New Blog</Link>\n        </div>\n    </nav>\n    );\n}\n/* outer curly bracket are for dynamic value,\ninside curly bracket are javascript object in which you can do different key value pair\nkey - css property\nvalue - css value for that property */\nexport default Navbar;\n\n\n/* without link tag */\n// const Navbar = () => {\n//     return (  \n//     <nav className =\"navbar\">\n//         <h1> Blog</h1>\n//         <div className=\"links\"></div>\n//         <div className=\"links\">\n//             <a href=\"/\">Home</a>\n//             <a href=\"/create\" style={\n//             {\n//                 color: \"white\",\n//                 backgroundColor: '#f1356d',\n//                 borderRadius: '8px'\n//             } } >New Blog</a>\n//         </div>\n//     </nav>\n//     );\n// }\n// /* outer curly bracket are for dynamic value,\n// inside curly bracket are javascript object in which you can do different key value pair\n// key - css property\n// value - css value for that property */\n// export default Navbar;","import { Link } from \"react-router-dom\";\n\nconst BlogList = ( { blogs, title, deleteBlog } ) => {\n    \n    return ( \n        <div className=\"blog-list\">\n            <h2>{ title }</h2>\n            { blogs.map( (blog) => (\n                <div className=\"blog-preview\" key={ blog.id }>\n                    <Link to={ `/blogs/${blog.id}` }>\n                    <h2>{ blog.title }</h2>\n                    <p>Written By { blog.author }</p>\n                    </Link>\n                    <button onClick= {\n                        () => deleteBlog(blog.id) }>Delete</button>\n                </div>\n            )) }\n        </div>\n    );\n}\n\nexport default BlogList;","import { useState, useEffect } from 'react';\n\n// custom hook need to start with word use\n// this case useFetch\nconst useFetch = ( url ) => {\n\n    const [ data, setData ] = useState( null );\n    const [ isPending, setIsPending ] = useState( true );\n    const [ error, setError ] = useState( null );\n\n    useEffect( ()=> {\n        const abortCont = new AbortController();\n        setTimeout( ()=> {\n            fetch( url, { signal: abortCont.signal } )\n                .then( resp => {\n                    if( !resp.ok ){\n                        throw Error('could not fetch the data')\n                    }\n                    return resp.json();\n                })\n                .then( data => {\n                    setData(data)\n                    setIsPending(false)\n                    setError(null)\n                })\n                // will trigger only if there is network error\n                .catch( err => {\n                    if( err.name === 'AbortError' ){\n                        console.log('fetch aborted')\n                    }\n                    else{\n                        setIsPending(false);\n                        setError(err.message);\n                    }\n                });\n        },500);\n\n        return () => abortCont.abort();\n    }, [url]);\n\n    return { data, setData , isPending, error }\n}\n\nexport default useFetch;","import  BlogList  from './blogLists'\nimport useFetch from './useFetch';\n\nconst Home = () => {\n\n    const { data, setData, isPending, error } = useFetch(\n                \"http://localhost:8000/blogs\" \n    );\n    \n    const deleteBlog = (id) => {\n        console.log(id)\n        \n        // const newBlogs = data.filter( blogs => blogs.id !== id );\n        // setData(newBlogs);\n\n        fetch( \"http://localhost:8000/blogs/\" + id, {\n            method: 'DELETE'\n        }).then(()=> window.location.reload() )\n       \n    }\n\n    return ( \n        <div className=\"home\">\n            { error && <div>{ error }</div> }\n            { isPending && <div>Loading...</div> }\n            { data && < BlogList blogs={ data } \n            title= \"All Blogs!\" deleteBlog={ deleteBlog } /> }\n        </div>\n     );\n}\n\nexport default Home;","import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst Create = () => {\n    const [ title, setTitle ] = useState('');\n    const [ body, setBody ] = useState('');\n    const [ author, setAuthor ] = useState('knight');\n    const [ isPending, setIsPending ] = useState(false);\n    const history = useHistory();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const blog = { title, body, author }\n\n        setIsPending(true)\n        \n        fetch('http://localhost:8000/blogs/', {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(blog)\n        }).then(() => {\n            console.log('New Blog Added')\n\n            setIsPending(false);\n\n            // history.go(-1);\n            history.push('/ReactFirstBlogApp/')\n        })\n    }\n    return ( \n        <div className=\"create\">\n            <h2>Add a New Blog</h2>\n            <form onSubmit = {handleSubmit}>\n                {/* title */}\n                <label>Blog Title</label>\n                <input type=\"text\" required\n                value= {title} \n                onChange = { (e) => setTitle( e.target.value ) }/>\n                {/* body */}\n                <label>Blog Body</label>\n                <textarea required\n                value = {body}\n                onChange={ (e) => setBody( e.target.value ) }\n                ></textarea>\n                {/* author */}\n                <label>Blog Author</label>\n                <select\n                value = { author }\n                onChange = { (e) => setAuthor(e.target.value )}>\n                    <option value=\"Knight\">Knight</option>\n                    <option value=\"Luffy\">Lufffy</option>\n                </select>\n               { !isPending  && <button>Add Blog</button> } \n               { isPending  && <button disabled>Adding blog...</button> } \n            </form>\n        </div>\n     );\n}\n \nexport default Create;","import { useHistory, useParams } from \"react-router-dom\";\nimport useFetch  from \"./useFetch\";\n\nconst BlogDetails = () => {\n\n    const { id } = useParams();\n    const { data: blog, error, isPending } = useFetch( 'http://localhost:8000/blogs/' + id );\n    const history = useHistory();\n\n    const handleClick = () => {\n        fetch( \"http://localhost:8000/blogs/\" + id, {\n            method: 'DELETE'\n        }).then(()=> \n        history.push('/ReactFirstBlogApp/'))\n    }\n\n    return ( \n        <div className=\"blog-details\">\n            { isPending && <div>Loading...</div> }\n            { error && <div>{error}</div> }\n            { blog && (\n                <article>\n                    <h2>{ blog.title }</h2>\n                    <p>Written By { blog.author }</p>\n                    <div>{ blog.body }</div>\n                    <button onClick={handleClick}>Delete Post</button>\n                </article>\n            ) }\n        </div>\n    );\n}\n\nexport default BlogDetails;","import Navbar from './Navbar';\nimport Home from './Home'\nimport Create from './Create';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport BlogDetails from './BlogDetails';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar/>\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/ReactFirstBlogApp/\">\n              <Home/>\n            </Route>\n            <Route exact path=\"/create\">\n             <Create/>\n            </Route>\n            <Route path=\"/blogs/:id\">\n             <BlogDetails/>\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n// //////////////////\n/* without rout */ //\n/////////////////////\n\n// import Navbar from './Navbar';\n// import Home from './Home'\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <Navbar/>\n//       <div className=\"content\">\n//         <Home/>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}